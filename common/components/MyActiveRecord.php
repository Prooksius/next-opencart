<?php
/**
 * Created by PhpStorm.
 * User: prook
 * Date: 21.06.2019
 * Time: 13:50
 */

namespace common\components;

use Yii;
use yii\db\ActiveRecord;

class MyActiveRecord extends ActiveRecord
{
    protected $_languages;

    protected $_desc_class = '';
    protected $_desc_id_name = '';

    protected $_desc_fields = [];

    public function getLanguages()
    {
        $langs = [];
        if (Yii::$app->request->isPost && !Yii::$app->request->isAjax) {
          $class = explode("\\", $this->className());
          $class = array_pop($class);

          $post = Yii::$app->request->post($class);
//          var_dump($post['languages']);

          foreach ($post['languages'] as $lang => $language) {
            $fields_arr = [];
            foreach ($this->_desc_fields as $field) {
              $fields_arr[$field] = $language[$field];
            }
            $langs[$lang] = $fields_arr;
          }
        } else {
          $lang_data = $this->hasMany($this->_desc_class, [$this->_desc_id_name => 'id'])->all();
  //        var_dump($lang_data);
          foreach ($lang_data as $language) {
            $fields_arr = [];
            foreach ($this->_desc_fields as $field) {
              $fields_arr[$field] = $language->$field;
            }
            $langs[$language->language_id] = $fields_arr;
          }
        }

        $this->_languages = $langs;
        return $langs;
    }

    public function setLanguages($value)
    {
        $this->_languages = $value;
    }

    /**
     * @inheritdoc
     */
    public function beforeSave($insert)
    {
      $errors = [];
      $class = explode("\\", $this->_desc_class);
      $class = array_pop($class);

      if (empty($this->_languages)) {
          $this->getLanguages();
      }

      foreach ($this->_languages as $lang => $attrs) {
        $post = [$class => $attrs];
        $post[$class]['language_id'] = $lang;
        $post[$class][$this->_desc_id_name] = $insert ? 0 : $this->id;
        $desc = new $this->_desc_class;
        $loaded = $desc->load($post);
        $validated = $desc->validate();
        if ($loaded && $validated) {
          //
        } else {
          //var_dump($post);
          $errors[$lang] = $desc->getFirstErrors();
        }
      }
      if (!empty($errors)) {
        $this->addError('languages', $errors);
        return false;
      }
      
      return parent::beforeSave($insert);
    }

    /**
     * @inheritdoc
     */
    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes);

        $class = $this->_desc_class;

        if (empty($this->_languages)) {
            $this->getLanguages();
        }
        if (!$insert) {
            static::getDb()
                ->createCommand()
                ->delete($class::tableName(), [$this->_desc_id_name => $this->id])
                ->execute();
        }
        if (!empty($this->_languages)) {
            $lang_data = [];
            foreach ($this->_languages as $locale => $language) {
                $lang_arr = [
                    $this->id,
                    $locale,
                ];
                foreach ($this->_desc_fields as $field) {
                    $lang_arr[] = $language[$field];
                }

                $lang_data[] = $lang_arr;
            }
            static::getDb()
                ->createCommand()
                ->batchInsert(
                    $class::tableName(),
                    array_merge([$this->_desc_id_name, 'language_id'], $this->_desc_fields),
                    $lang_data
                )
                ->execute();
        }
        return true;
    }

    public function afterDelete()
    {
        parent::afterDelete(); // TODO: Change the autogenerated stub

        $class = $this->_desc_class;

        static::getDb()
            ->createCommand()
            ->delete($class::tableName(), [$this->_desc_id_name => $this->id])
            ->execute();
    }
}